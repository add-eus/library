@use "sass:color";
@use "sass:map";

@import "./mixins";
@import "bulma/sass/utilities/derived-variables.sass";

$varColors: (
    "primary": $primary,
    "primary-dark": $primary-dark,
    "primary-light": $primary-light,

    "info": $info,
    "info-dark": $info-dark,
    "info-light": $info-light,

    "success": $success,
    "success-dark": $success-dark,
    "success-light": $success-light,

    "warning": $warning,
    "warning-dark": $warning-dark,
    "warning-light": $warning-light,

    "danger": $danger,
    "danger-dark": $danger-dark,
    "danger-light": $danger-light,

    "black-bis": $black-bis,
    "black-ter": $black-ter,

    "grey-darker": $grey-darker,
    "grey-dark": $grey-dark,
    "grey": $grey,
    "grey-light": $grey-light,
    "grey-lighter": $grey-lighter,

    "white-ter": $white-ter,
    "white-bis": $white-bis,

    "gold": $gold,
    "silver": $silver,
    "bronze": $bronze,

    "orange": $orange,
    "yellow": $yellow,
    "green": $green,
    "turquoise": $turquoise,
    "cyan": $cyan,
    "blue": $blue,
    "purple": $purple,
    "red": $red,
);

:root {
    // layout colors
    --body-color: #f9f9f9;
    --title-grey: #a9abac;
    --background-grey: #f0f0f0;
    --medium-grey: #ddd;
    --light-grey: #eee;
    --white: #fff;
    --border: hsl(0deg 0% 86%);

    // placeload colors
    --placeload-nuance-from: rgb(0 0 0 / 7%);
    --placeload-nuance-to: rgb(0 0 0 / 15%);
    --placeload-dark-nuance-from: rgb(255 255 255 / 15%);
    --placeload-dark-nuance-to: rgb(255 255 255 / 24%);

    @each $varColorName in map.keys($varColors) {
        $varColor: map.get($varColors, $varColorName);

        @if $varColor == null {
            $varColor: #000;
        }

        $varColorHue: color.hue($varColor);
        $varColorSaturation: color.saturation($varColor);
        $varColorLightness: color.lightness($varColor);

        @include colorHsl(
            $varColorName,
            color.hue($varColor),
            color.saturation($varColor),
            color.lightness($varColor)
        );
    }

    // @TODO: remove this on next version

    // sidebar HSL (#344258) // hsl(217, 26%, 27%)
    @include colorHsl("sidebar", 217, 26%, 27%);

    // primary-grey HSL (#ccc) // hsl(0, 0%, 80%)
    @include colorHsl("primary-grey", 0, 0%, 80%);

    // secondary HSL (#346beb) // hsl(222, 82%, 56%)
    @include colorHsl("secondary", 222, 82%, 56%);

    // light-blue HSL (#77d2f3) // hsl(196, 84%, 71%)
    @include colorHsl("light-blue", 196, 84%, 71%);

    // lime HSL (#90e0d0) // hsl(168, 56%, 72%)
    @include colorHsl("lime", 168, 56%, 72%);

    // dark HSL (#283252) // hsl(226, 34%, 24%)
    @include colorHsl("dark", 226, 34%, 24%);

    // smoke-white HSL (#fcfcfc) // hsl(0, 0%, 99%)
    @include colorHsl("smoke-white", 0, 0%, 99%);

    // placeholder HSL (#cecece) // hsl(0, 0%, 81%)
    @include colorHsl("placeholder", 0, 0%, 81%);

    // muted-grey HSL (#999) // hsl(0, 0%, 60%)
    @include colorHsl("muted-grey", 0, 0%, 60%);

    // fade-grey HSL (#ededed) // hsl(0, 0%, 93%)
    @include colorHsl("fade-grey", 0, 0%, 93%);

    // widget-grey HSL (#f5f6fa) // hsl(228, 33%, 97%)
    @include colorHsl("widget-grey", 228, 33%, 97%);

    // dark-dark-text HSL (#aaaab3) // hsl(240, 6%, 68%)
    @include colorHsl("dark-dark-text", 240, 6%, 68%);

    // dark-text HSL (#283252) // hsl(226, 34%, 24%)
    @include colorHsl("dark-text", 226, 34%, 24%);

    // light-text HSL (#a2a5b9) // hsl(232, 14%, 68%)
    @include colorHsl("light-text", 232, 14%, 68%);

    // dark-sidebar HSL (#232326) // hsl(240, 4%, 14%)
    @include colorHsl("dark-sidebar", 240, 4%, 14%);

    // landing-xxx HSL (#0c0e14) // hsl(225, 25%, 6%)
    @include colorHsl("landing-xxx", 225, 25%, 6%);

    // landing-yyy HSL (#191c2b) // hsl(230, 26%, 13%)
    @include colorHsl("landing-yyy", 230, 26%, 13%);
}
